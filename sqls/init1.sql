CREATE TABLE PROMOTION (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    discount INTEGER NOT NULL,
    start DATETIME NOT NULL,
    end DATETIME NOT NULL
);
CREATE TABLE CUSTOMER (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    dob DATE NOT NULL,
    address TEXT NOT NULL,
    gender CHAR(1) NOT NULL
);
CREATE TABLE TICKET (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    price INTEGER NOT NULL,
    row INTEGER NOT NULL,
    seat INTEGER NOT NULL,
    transactionId INTEGER NOT NULL,
    sessionId INTEGER NOT NULL,
    FOREIGN KEY(transactionId) REFERENCES TICKET_TRANSACTION(id),
    FOREIGN KEY(sessionId) REFERENCES SESSION(id)
);
CREATE TABLE MOVIE (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    title TEXT NOT NULL,
    country TEXT NOT NULL,
    language TEXT NOT NULL,
    cost INTEGER NOT NULL,
    releaseDate DATETIME NOT NULL,
    genre TEXT NOT NULL
);
CREATE TABLE CAST (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    movieId INTEGER NOT NULL,
    artistId INTEGER NOT NULL,
    isDirector BOOLEAN NOT NULL,
    FOREIGN KEY(movieId) REFERENCES MOVIE(id),
    FOREIGN KEY(artistId) REFERENCES ARTIST(id)
);
CREATE TABLE ARTIST (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    dob DATE NOT NULL,
    gender CHAR(1) NOT NULL
);
CREATE TABLE SESSION (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    dateTime DATETIME NOT NULL,
    movieId INTEGER NOT NULL,
    hall INTEGER NOT NULL,
    size INTEGER NOT NULL,
    state TEXT NOT NULL,
    city TEXT NOT NULL,
    address TEXT NOT NULL,
    FOREIGN KEY(movieId) REFERENCES MOVIE(id)
);
CREATE TABLE TICKET_TRANSACTION (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    dateTime DATETIME NOT NULL,
    totalPrice INTEGER NOT NULL,
    payMethod TEXT NOT NULL,
    customerId INTEGER NULL,
    promotionId INTEGER NULL,
    os TEXT NULL,
    browser TEXT NULL,
    sessionId INTEGER NULL,
    numTickets INTEGER NOT NULL,
    FOREIGN KEY(customerId) REFERENCES CUSTOMER(id),
    FOREIGN KEY(promotionId) REFERENCES PROMOTION(id),
    FOREIGN KEY(sessionId) REFERENCES SESSION(id)
);
